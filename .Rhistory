library(dplyr) # for data wrangling and manipulation
library(ggplot2) # for data visualization
ggplot() +
geom_jitter(data = filter(mpg, year == 2008),
aes(x = hwy, y = cty, color = class),
width = 0.4) +
coord_fixed() +
xlim(c(11,40)) +
ylim(c(11,40)) +
theme_minimal()
# load required R packages - alternatively, use `library(tidyverse)`, if you will need multiple tidyverse packages
library(dplyr) # for data wrangling and manipulation
library(ggplot2) # for data visualization
ggplot() +
geom_jitter(data = filter(mpg, year == 2008),
aes(x = hwy, y = cty, color = class),
width = 0.2) +
coord_fixed() +
xlim(c(11,40)) +
ylim(c(11,40)) +
theme_minimal()
# load required R packages - alternatively, use `library(tidyverse)`, if you will need multiple tidyverse packages
library(dplyr) # for data wrangling and manipulation
library(ggplot2) # for data visualization
ggplot() +
geom_jitter(data = filter(mpg, year == 2008),
aes(x = hwy, y = cty, color = class),
width = 0.4) +
coord_fixed() +
xlim(c(11,40)) +
ylim(c(11,40)) +
theme_minimal()
# load required R packages - alternatively, use `library(tidyverse)`, if you will need multiple tidyverse packages
library(dplyr) # for data wrangling and manipulation
library(ggplot2) # for data visualization
ggplot() +
geom_jitter(data = filter(mpg, year == 2008),
aes(x = hwy, y = cty, color = class)) +
coord_fixed() +
xlim(c(11,40)) +
ylim(c(11,40)) +
theme_minimal()
# load required R packages - alternatively, use `library(tidyverse)`, if you will need multiple tidyverse packages
library(dplyr) # for data wrangling and manipulation
library(ggplot2) # for data visualization
ggplot() +
geom_jitter(data = filter(mpg, year == 2008),
aes(x = hwy, y = cty, color = class),
width = 0.4) +
coord_fixed() +
xlim(c(11,40)) +
ylim(c(11,40)) +
theme_minimal()
# load required R packages - alternatively, use `library(tidyverse)`, if you will need multiple tidyverse packages
library(dplyr) # for data wrangling and manipulation
library(ggplot2) # for data visualization
ggplot() +
geom_jitter(data = filter(mpg, year == 2008),
aes(x = hwy, y = cty, color = class),
width = 0.4,
alpha = 0.75) +
coord_fixed() +
xlim(c(11,40)) +
ylim(c(11,40)) +
theme_minimal()
# load required R packages - alternatively, use `library(tidyverse)`, if you will need multiple tidyverse packages
library(dplyr) # for data wrangling and manipulation
library(ggplot2) # for data visualization
ggplot() +
geom_jitter(data = filter(mpg, year == 2008),
aes(x = hwy, y = cty, color = class),
width = 0.4,
alpha = 0.6) +
coord_fixed() +
xlim(c(11,40)) +
ylim(c(11,40)) +
theme_minimal()
# load required R packages - alternatively, use `library(tidyverse)`, if you will need multiple tidyverse packages
library(dplyr) # for data wrangling and manipulation
library(ggplot2) # for data visualization
ggplot() +
geom_jitter(data = filter(mpg, year == 2008),
aes(x = hwy, y = cty, color = class),
width = 0.4,
alpha = 0.6,
size = 1.5) +
coord_fixed() +
xlim(c(11,40)) +
ylim(c(11,40)) +
theme_minimal()
# load required R packages - alternatively, use `library(tidyverse)`, if you will need multiple tidyverse packages
library(dplyr) # for data wrangling and manipulation
library(ggplot2) # for data visualization
ggplot() +
geom_jitter(data = filter(mpg, year == 2008),
aes(x = hwy, y = cty, color = class),
width = 0.4,
alpha = 0.6,
size = 2) +
coord_fixed() +
xlim(c(11,40)) +
ylim(c(11,40)) +
theme_minimal()
# load required R packages - alternatively, use `library(tidyverse)`, if you will need multiple tidyverse packages
library(dplyr) # for data wrangling and manipulation
library(ggplot2) # for data visualization
ggplot() +
geom_jitter(data = filter(mpg, year == 2008),
aes(x = hwy, y = cty, color = class),
width = 0.4,
alpha = 0.6,
size = 2) +
coord_fixed() +
xlim(c(11,40)) +
ylim(c(11,40))
# load required R packages - alternatively, use `library(tidyverse)`, if you will need multiple tidyverse packages
library(dplyr) # for data wrangling and manipulation
library(ggplot2) # for data visualization
ggplot() +
geom_jitter(data = filter(mpg, year == 2008),
aes(x = hwy, y = cty, color = class),
width = 0.4,
alpha = 0.6,
size = 2) +
xlim(c(11,40)) +
ylim(c(11,40))
# load required R packages - alternatively, use `library(tidyverse)`,
# if you will need multiple tidyverse packages
library(dplyr) # for data wrangling and manipulation
library(ggplot2) # for data visualization
ggplot() +
geom_point(data = filter(mpg, year == 2008),
aes(x = hwy, y = cty, color = class),
width = 0.4) +
xlim(c(11,40)) +
ylim(c(11,40)) +
theme_minimal()
# load required R packages - alternatively, use `library(tidyverse)`,
# if you will need multiple tidyverse packages
library(dplyr) # for data wrangling and manipulation
library(ggplot2) # for data visualization
ggplot() +
geom_point(data = filter(mpg, year == 2008),
aes(x = hwy, y = cty, color = class),
width = 0.4) +
xlim(c(11,40)) +
ylim(c(11,40))
# load required R packages - alternatively, use `library(tidyverse)`,
# if you will need multiple tidyverse packages
library(dplyr) # for data wrangling and manipulation
library(ggplot2) # for data visualization
ggplot() +
geom_point(data = filter(mpg, year == 2008),
aes(x = hwy, y = cty, color = class),
width = 0.4)
# load required R packages - alternatively, use `library(tidyverse)`, if you will need multiple tidyverse packages
library(dplyr) # for data wrangling and manipulation
library(ggplot2) # for data visualization
ggplot() +
geom_jitter(data = filter(mpg, year == 2008),
aes(x = hwy, y = cty, color = class),
width = 0.4,
alpha = 0.6,
size = 2)
# load required R packages - alternatively, use `library(tidyverse)`, if you will need multiple tidyverse packages
library(dplyr) # for data wrangling and manipulation
library(ggplot2) # for data visualization
ggplot() +
geom_jitter(data = filter(mpg, year == 2008),
aes(x = hwy, y = cty, color = class),
width = 0.4,
alpha = 0.6,
size = 2) +
geom_abline()
ggplot() +
geom_jitter(data = filter(mpg, year == 2008),
aes(x = hwy, y = cty, color = class),
width = 0.4,
alpha = 0.6,
size = 2) +
geom_abline(intercept = 0,
slope = 1)
# load required R packages - alternatively, use `library(tidyverse)`, if you will need multiple tidyverse packages
library(dplyr) # for data wrangling and manipulation
library(ggplot2) # for data visualization
ggplot() +
geom_jitter(data = filter(mpg, year == 2008),
aes(x = hwy, y = cty, color = class),
width = 0.4,
alpha = 0.6,
size = 2) +
geom_abline(intercept = 0,
slope = 1) +
xlab("Highway Fuel Economy, mi/gal") +
xlab("City Fuel Economy, mi/gal") +
# load required R packages - alternatively, use `library(tidyverse)`, if you will need multiple tidyverse packages
library(dplyr) # for data wrangling and manipulation
library(ggplot2) # for data visualization
ggplot() +
geom_jitter(data = filter(mpg, year == 2008),
aes(x = hwy, y = cty, color = class),
width = 0.4,
alpha = 0.6,
size = 2) +
geom_abline(intercept = 0,
slope = 1) +
xlab("Highway Fuel Economy, mi/gal") +
xlab("City Fuel Economy, mi/gal")
# load required R packages - alternatively, use `library(tidyverse)`, if you will need multiple tidyverse packages
library(dplyr) # for data wrangling and manipulation
library(ggplot2) # for data visualization
ggplot() +
geom_jitter(data = filter(mpg, year == 2008),
aes(x = hwy, y = cty, color = class),
width = 0.4,
alpha = 0.6,
size = 2) +
geom_abline(intercept = 0,
slope = 1) +
xlab("Highway Fuel Economy, mi/gal") +
ylab("City Fuel Economy, mi/gal")
# load required R packages - alternatively, use `library(tidyverse)`, if you will need multiple tidyverse packages
library(dplyr) # for data wrangling and manipulation
library(ggplot2) # for data visualization
ggplot() +
geom_jitter(data = filter(mpg, year == 2008),
aes(x = hwy, y = cty, color = class),
width = 0.4,
alpha = 0.6,
size = 2) +
geom_abline(intercept = 0,
slope = 1) +
coord_fixed() +
xlab("Highway Fuel Economy, mi/gal") +
ylab("City Fuel Economy, mi/gal")
# load required R packages - alternatively, use `library(tidyverse)`, if you will need multiple tidyverse packages
library(dplyr) # for data wrangling and manipulation
library(ggplot2) # for data visualization
ggplot() +
geom_jitter(data = filter(mpg, year == 2008),
aes(x = hwy, y = cty, color = class),
width = 0.4,
alpha = 0.6,
size = 2) +
geom_abline(intercept = 0,
slope = 1) +
coord_fixed() +
xlim(c(0,40)) +
ylim(c(0,40)) +
xlab("Highway Fuel Economy, mi/gal") +
ylab("City Fuel Economy, mi/gal")
# load required R packages - alternatively, use `library(tidyverse)`, if you will need multiple tidyverse packages
library(dplyr) # for data wrangling and manipulation
library(ggplot2) # for data visualization
ggplot() +
geom_jitter(data = filter(mpg, year == 2008),
aes(x = hwy, y = cty, color = class),
width = 0.4,
alpha = 0.6,
size = 2) +
geom_abline(intercept = 0,
slope = 1) +
coord_fixed() +
xlim(c(10,40)) +
ylim(c(10,40)) +
xlab("Highway Fuel Economy, mi/gal") +
ylab("City Fuel Economy, mi/gal")
# load required R packages - alternatively, use `library(tidyverse)`, if you will need multiple tidyverse packages
library(dplyr) # for data wrangling and manipulation
library(ggplot2) # for data visualization
ggplot() +
geom_jitter(data = filter(mpg, year == 2008),
aes(x = hwy, y = cty, color = class),
width = 0.4,
alpha = 0.6,
size = 2) +
geom_abline(intercept = 0,
slope = 1) +
coord_fixed() +
xlim(c(0,40)) +
ylim(c(0,40)) +
xlab("Highway Fuel Economy, mi/gal") +
ylab("City Fuel Economy, mi/gal")
# use dplyr to create a summary subset from the `mpg` dataframe
mpg_subset <- mpg %>%
dplyr::filter(class == "suv", year == 1999) %>%
dplyr::group_by(manufacturer) %>%
dplyr::summarize(hwy_mean = mean(hwy), displ_mean = mean(displ))
# call to ggplot, note that data and aesthetics are called in each geom layer
ggplot() +
# first layer
geom_jitter(data = filter(mpg, class == "suv", year == 2008),
aes(x = manufacturer,
y = hwy,
color = displ),
width = 0.1,
size = 2) +
# second layer
geom_errorbar(data = mpg_subset,
aes(x = manufacturer,
ymin = hwy_mean,
ymax = hwy_mean,
color = displ_mean),
alpha = 0.5,
size = 1) +
# customize plot labels
labs(title = "Fuel Economy for 2008 SUVs by Manufacturer and Engine Displacement",
color = "Disp (L)") +
ylab("highway fuel economy (miles/gal)") +
# add a fancy color scale
scale_color_viridis_c(option = "D", direction = -1) +
# adopt a theme without gray background
theme_classic()
# use dplyr to create a summary subset from the `mpg` dataframe
mpg_subset <- mpg %>%
dplyr::filter(class == "suv", year == 1999) %>%
dplyr::group_by(manufacturer) %>%
dplyr::summarize(hwy_mean = mean(hwy), displ_mean = mean(displ))
# call to ggplot, note that data and aesthetics are called in each geom layer
ggplot() +
# first layer
geom_jitter(data = filter(mpg, class == "suv", year == 1999),
aes(x = manufacturer,
y = hwy,
color = displ),
width = 0.1,
size = 2) +
# second layer
geom_errorbar(data = mpg_subset,
aes(x = manufacturer,
ymin = hwy_mean,
ymax = hwy_mean,
color = displ_mean),
alpha = 0.5,
size = 1) +
# customize plot labels
labs(title = "Fuel Economy for 2008 SUVs by Manufacturer and Engine Displacement",
color = "Disp (L)") +
ylab("highway fuel economy (miles/gal)") +
# add a fancy color scale
scale_color_viridis_c(option = "D", direction = -1) +
# adopt a theme without gray background
theme_classic()
# use dplyr to create a summary subset from the `mpg` dataframe
mpg_subset <- mpg %>%
dplyr::filter(class == "suv", year == 2008) %>%
dplyr::group_by(manufacturer) %>%
dplyr::summarize(hwy_mean = mean(hwy), displ_mean = mean(displ))
# call to ggplot, note that data and aesthetics are called in each geom layer
ggplot() +
# first layer
geom_jitter(data = filter(mpg, class == "suv", year == 2008),
aes(x = manufacturer,
y = hwy,
color = displ),
width = 0.1,
size = 2) +
# second layer
geom_errorbar(data = mpg_subset,
aes(x = manufacturer,
ymin = hwy_mean,
ymax = hwy_mean,
color = displ_mean),
alpha = 0.5,
size = 1) +
# customize plot labels
labs(title = "Fuel Economy for 2008 SUVs by Manufacturer and Engine Displacement",
color = "Disp (L)") +
ylab("highway fuel economy (miles/gal)") +
# add a fancy color scale
scale_color_viridis_c(option = "D", direction = -1) +
# adopt a theme without gray background
theme_classic()
# use dplyr to create a summary subset from the `mpg` dataframe
mpg_subset <- mpg %>%
dplyr::filter(class == "suv", year == 2008) %>%
dplyr::group_by(manufacturer) %>%
dplyr::summarize(hwy_mean = mean(hwy), displ_mean = mean(displ))
# call to ggplot, note that data and aesthetics are called in each geom layer
ggplot() +
# first layer
geom_jitter(data = filter(mpg, class == "suv" & year == 2008),
aes(x = manufacturer,
y = hwy,
color = displ),
width = 0.1,
size = 2) +
# second layer
geom_errorbar(data = mpg_subset,
aes(x = manufacturer,
ymin = hwy_mean,
ymax = hwy_mean,
color = displ_mean),
alpha = 0.5,
size = 1) +
# customize plot labels
labs(title = "Fuel Economy for 2008 SUVs by Manufacturer and Engine Displacement",
color = "Disp (L)") +
ylab("highway fuel economy (miles/gal)") +
# add a fancy color scale
scale_color_viridis_c(option = "D", direction = -1) +
# adopt a theme without gray background
theme_classic()
# use dplyr to create a summary subset from the `mpg` dataframe
mpg_subset <- mpg %>%
dplyr::filter(class == "suv", year == 2008) %>%
dplyr::group_by(manufacturer) %>%
dplyr::summarize(hwy_mean = mean(hwy), displ_mean = mean(displ))
# call to ggplot, note that data and aesthetics are called in each geom layer
ggplot() +
# first layer
geom_jitter(data = filter(mpg, class == "suv" & year == 2008),
aes(x = manufacturer,
y = hwy,
color = displ),
width = 0.1,
size = 2) +
# second layer
geom_errorbar(data = mpg_subset,
aes(x = manufacturer,
ymin = hwy_mean,
ymax = hwy_mean,
color = displ_mean),
alpha = 0.5,
size = 1) +
# customize plot labels
labs(title = "Fuel Economy for 2008 SUVs by Manufacturer and Engine Displacement",
color = "Disp (L)",
ylab = "highway fuel economy (miles/gal)") +
# ylab("highway fuel economy (miles/gal)") +
# add a fancy color scale
scale_color_viridis_c(option = "D", direction = -1) +
# adopt a theme without gray background
theme_classic()
# use dplyr to create a summary subset from the `mpg` dataframe
mpg_subset <- mpg %>%
dplyr::filter(class == "suv", year == 2008) %>%
dplyr::group_by(manufacturer) %>%
dplyr::summarize(hwy_mean = mean(hwy), displ_mean = mean(displ))
# call to ggplot, note that data and aesthetics are called in each geom layer
ggplot() +
# first layer
geom_jitter(data = filter(mpg, class == "suv" & year == 2008),
aes(x = manufacturer,
y = hwy,
color = displ),
width = 0.1,
size = 2) +
# second layer
geom_errorbar(data = mpg_subset,
aes(x = manufacturer,
ymin = hwy_mean,
ymax = hwy_mean,
color = displ_mean),
alpha = 0.5,
size = 1) +
# customize plot labels
labs(title = "Fuel Economy for 2008 SUVs by Manufacturer and Engine Displacement",
color = "Disp (L)") +
ylab("highway fuel economy (miles/gal)") +
# add a fancy color scale
scale_color_viridis_c(option = "D", direction = -1) +
# adopt a theme without gray background
theme_classic()
# load required R packages - alternatively, use `library(tidyverse)`, if you will need multiple tidyverse packages
library(dplyr) # for data wrangling and manipulation
library(ggplot2) # for data visualization
ggplot() +
geom_jitter(data = filter(mpg, year == 2008),
aes(x = hwy, y = cty, color = class),
width = 0.4,
alpha = 0.6,
size = 2) +
geom_abline(intercept = 0,
slope = 1) +
coord_fixed() +
xlim(c(0,40)) +
ylim(c(0,40)) +
xlab("Highway Fuel Economy, mi/gal") +
ylab("City Fuel Economy, mi/gal") +
theme_classic()
# load required R packages - alternatively, use `library(tidyverse)`, if you will need multiple tidyverse packages
library(dplyr) # for data wrangling and manipulation
library(ggplot2) # for data visualization
ggplot() +
geom_jitter(data = filter(mpg, year == 2008),
aes(x = hwy, y = cty, color = class),
width = 0.4,
alpha = 0.6,
size = 2) +
geom_abline(intercept = 0,
slope = 1) +
coord_fixed() +
xlim(c(0,40)) +
ylim(c(0,40)) +
xlab("Highway Fuel Economy, mi/gal") +
ylab("City Fuel Economy, mi/gal") +
theme_minimal()
mpg %>% filter(year == 2008) %>% count(class)
mpg %>% filter(year == 2008) %>% sum(class)
mpg %>% filter(year == 2008) %>% count(class) %>% sum()
mpg %>% filter(year == 2008) %>% count(class) -> summed
sum(summed)
View(summed)
sum(summed$n)
# load required R packages - alternatively, use `library(tidyverse)`,
# if you will need multiple tidyverse packages
library(dplyr) # for data wrangling and manipulation
library(ggplot2) # for data visualization
ggplot() +
geom_point(data = filter(mpg, year == 2008),
aes(x = hwy, y = cty, color = class))
