city08 = col_double(),
city08U = col_double(),
cityA08 = col_double(),
cityA08U = col_double(),
cityCD = col_double(),
cityE = col_double(),
cityUF = col_double(),
co2 = col_double(),
co2A = col_double(),
co2TailpipeAGpm = col_double(),
co2TailpipeGpm = col_double(),
comb08 = col_double(),
comb08U = col_double(),
combA08 = col_double(),
combA08U = col_double(),
combE = col_double(),
combinedCD = col_double(),
combinedUF = col_double(),
cylinders = col_double(),
displ = col_double(),
drive = col_character(),
engId = col_double(),
eng_dscr = col_character(),
feScore = col_double(),
fuelCost08 = col_double(),
fuelCostA08 = col_double(),
fuelType = col_character(),
fuelType1 = col_character(),
ghgScore = col_double(),
ghgScoreA = col_double(),
highway08 = col_double(),
highway08U = col_double(),
highwayA08 = col_double(),
highwayA08U = col_double(),
highwayCD = col_double(),
highwayE = col_double(),
highwayUF = col_double(),
hlv = col_double(),
hpv = col_double(),
id = col_double(),
lv2 = col_double(),
lv4 = col_double(),
make = col_character(),
model = col_character(),
mpgData = col_character(),
phevBlended = character(),
pv2 = col_double(),
pv4 = col_double(),
range = col_double(),
rangeCity = col_double(),
rangeCityA = col_double(),
rangeHwy = col_double(),
rangeHwyA = col_double(),
trany = col_character(),
UCity = col_double(),
UCityA = col_double(),
UHighway = col_double(),
UHighwayA = col_double(),
VClass = col_character(),
year = col_double(),
youSaveSpend = col_double(),
guzzler = col_character(),
trans_dscr = col_character(),
tCharger = col_character(),
sCharger = col_character(),
atvType = col_character(),
fuelType2 = col_character(),
rangeA = col_character(),
evMotor = col_character(),
mfrCode = col_character(),
c240Dscr = col_double(),
charge240b = col_double(),
c240bDscr = col_character(),
createdOn = col_character(),
modifiedOn = col_character(),
startStop = col_character(),
phevCity = col_double(),
phevHwy = col_double(),
phevComb = col_double()))
test<- read_csv("vehicles.csv", col_names = TRUE, cols(barrels08 = col_double(),
barrelsA08 = col_double(),
charge120 = col_double(),
charge240 = col_double(),
city08 = col_double(),
city08U = col_double(),
cityA08 = col_double(),
cityA08U = col_double(),
cityCD = col_double(),
cityE = col_double(),
cityUF = col_double(),
co2 = col_double(),
co2A = col_double(),
co2TailpipeAGpm = col_double(),
co2TailpipeGpm = col_double(),
comb08 = col_double(),
comb08U = col_double(),
combA08 = col_double(),
combA08U = col_double(),
combE = col_double(),
combinedCD = col_double(),
combinedUF = col_double(),
cylinders = col_double(),
displ = col_double(),
drive = col_character(),
engId = col_double(),
eng_dscr = col_character(),
feScore = col_double(),
fuelCost08 = col_double(),
fuelCostA08 = col_double(),
fuelType = col_character(),
fuelType1 = col_character(),
ghgScore = col_double(),
ghgScoreA = col_double(),
highway08 = col_double(),
highway08U = col_double(),
highwayA08 = col_double(),
highwayA08U = col_double(),
highwayCD = col_double(),
highwayE = col_double(),
highwayUF = col_double(),
hlv = col_double(),
hpv = col_double(),
id = col_double(),
lv2 = col_double(),
lv4 = col_double(),
make = col_character(),
model = col_character(),
mpgData = col_character(),
phevBlended = col_logical(),
pv2 = col_double(),
pv4 = col_double(),
range = col_double(),
rangeCity = col_double(),
rangeCityA = col_double(),
rangeHwy = col_double(),
rangeHwyA = col_double(),
trany = col_character(),
UCity = col_double(),
UCityA = col_double(),
UHighway = col_double(),
UHighwayA = col_double(),
VClass = col_character(),
year = col_double(),
youSaveSpend = col_double(),
guzzler = col_character(),
trans_dscr = col_character(),
tCharger = col_character(),
sCharger = col_character(),
atvType = col_character(),
fuelType2 = col_character(),
rangeA = col_character(),
evMotor = col_character(),
mfrCode = col_character(),
c240Dscr = col_logical(),
charge240b = col_double(),
c240bDscr = col_character(),
createdOn = col_character(),
modifiedOn = col_character(),
startStop = col_character(),
phevCity = col_double(),
phevHwy = col_double(),
phevComb = col_double()))
test<- read_csv("vehicles.csv", col_names = TRUE, cols(barrels08 = col_double(),
barrelsA08 = col_double(),
charge120 = col_double(),
charge240 = col_double(),
city08 = col_double(),
city08U = col_double(),
cityA08 = col_double(),
cityA08U = col_double(),
cityCD = col_double(),
cityE = col_double(),
cityUF = col_double(),
co2 = col_double(),
co2A = col_double(),
co2TailpipeAGpm = col_double(),
co2TailpipeGpm = col_double(),
comb08 = col_double(),
comb08U = col_double(),
combA08 = col_double(),
combA08U = col_double(),
combE = col_double(),
combinedCD = col_double(),
combinedUF = col_double(),
cylinders = col_double(),
displ = col_double(),
drive = col_character(),
engId = col_double(),
eng_dscr = col_character(),
feScore = col_double(),
fuelCost08 = col_double(),
fuelCostA08 = col_double(),
fuelType = col_character(),
fuelType1 = col_character(),
ghgScore = col_double(),
ghgScoreA = col_double(),
highway08 = col_double(),
highway08U = col_double(),
highwayA08 = col_double(),
highwayA08U = col_double(),
highwayCD = col_double(),
highwayE = col_double(),
highwayUF = col_double(),
hlv = col_double(),
hpv = col_double(),
id = col_double(),
lv2 = col_double(),
lv4 = col_double(),
make = col_character(),
model = col_character(),
mpgData = col_character(),
phevBlended = col_logical(),
pv2 = col_double(),
pv4 = col_double(),
range = col_double(),
rangeCity = col_double(),
rangeCityA = col_double(),
rangeHwy = col_double(),
rangeHwyA = col_double(),
trany = col_character(),
UCity = col_double(),
UCityA = col_double(),
UHighway = col_double(),
UHighwayA = col_double(),
VClass = col_character(),
year = col_double(),
youSaveSpend = col_double(),
guzzler = col_character(),
trans_dscr = col_character(),
tCharger = col_character(),
sCharger = col_character(),
atvType = col_character(),
fuelType2 = col_character(),
rangeA = col_character(),
evMotor = col_character(),
mfrCode = col_character(),
c240Dscr = col_character(),
charge240b = col_double(),
c240bDscr = col_character(),
createdOn = col_character(),
modifiedOn = col_character(),
startStop = col_character(),
phevCity = col_double(),
phevHwy = col_double(),
phevComb = col_double()))
test3 <- read_csv(file = "https://www.fueleconomy.gov/feg/epadata/vehicles.csv.zip",
col_names = TRUE, cols(barrels08 = col_double(),
barrelsA08 = col_double(),
charge120 = col_double(),
charge240 = col_double(),
city08 = col_double(),
city08U = col_double(),
cityA08 = col_double(),
cityA08U = col_double(),
cityCD = col_double(),
cityE = col_double(),
cityUF = col_double(),
co2 = col_double(),
co2A = col_double(),
co2TailpipeAGpm = col_double(),
co2TailpipeGpm = col_double(),
comb08 = col_double(),
comb08U = col_double(),
combA08 = col_double(),
combA08U = col_double(),
combE = col_double(),
combinedCD = col_double(),
combinedUF = col_double(),
cylinders = col_double(),
displ = col_double(),
drive = col_character(),
engId = col_double(),
eng_dscr = col_character(),
feScore = col_double(),
fuelCost08 = col_double(),
fuelCostA08 = col_double(),
fuelType = col_character(),
fuelType1 = col_character(),
ghgScore = col_double(),
ghgScoreA = col_double(),
highway08 = col_double(),
highway08U = col_double(),
highwayA08 = col_double(),
highwayA08U = col_double(),
highwayCD = col_double(),
highwayE = col_double(),
highwayUF = col_double(),
hlv = col_double(),
hpv = col_double(),
id = col_double(),
lv2 = col_double(),
lv4 = col_double(),
make = col_character(),
model = col_character(),
mpgData = col_character(),
phevBlended = col_logical(),
pv2 = col_double(),
pv4 = col_double(),
range = col_double(),
rangeCity = col_double(),
rangeCityA = col_double(),
rangeHwy = col_double(),
rangeHwyA = col_double(),
trany = col_character(),
UCity = col_double(),
UCityA = col_double(),
UHighway = col_double(),
UHighwayA = col_double(),
VClass = col_character(),
year = col_double(),
youSaveSpend = col_double(),
guzzler = col_character(),
trans_dscr = col_character(),
tCharger = col_character(),
sCharger = col_character(),
atvType = col_character(),
fuelType2 = col_character(),
rangeA = col_character(),
evMotor = col_character(),
mfrCode = col_character(),
c240Dscr = col_character(),
charge240b = col_double(),
c240bDscr = col_character(),
createdOn = col_character(),
modifiedOn = col_character(),
startStop = col_character(),
phevCity = col_double(),
phevHwy = col_double(),
phevComb = col_double()))
file1 <- unz(description = "https://www.fueleconomy.gov/feg/epadata/vehicles.csv.zip")
file1 <- unz(description = "https://www.fueleconomy.gov/feg/epadata/vehicles.csv.zip", filename = "vehicles.csv")
unz(description = "https://www.fueleconomy.gov/feg/epadata/vehicles.csv.zip", filename = "vehicles.csv")
file2 <- read_csv(unz(description = "https://www.fueleconomy.gov/feg/epadata/vehicles.csv.zip", filename = "vehicles.csv"), col_names = TRUE)
unz(description = "https://www.fueleconomy.gov/feg/epadata/vehicles.csv.zip", filename = "vehicles.csv")
file4 <- unzip("vehicles.csv.zip")
data_5 <- read_csv(file4)
all_equal(data_5, raw_data)
anti_join(data_5, raw_data)
diff <- anti_join(raw_data, data_5)
View(diff)
View(data_5)
attributes(data_5)
compare <- tibble(data_5 = attributes(data_5,))
compare <- tibble(data_5 = attributes(data_5), raw = attributes(data_raw))
compare <- tibble(data_5 = attributes(data_5), raw = attributes(raw_data))
View(cafe)
View(compare)
file4 <- unzip("vehicles.csv.zip")
setwd("~/Downloads")
library(tidyverse)
file4 <- unzip("vehicles.csv.zip")
data_5 <- read_csv(file4)
#create a temp file to hold the zipped data
temp <- tempfile()
#download the file into temp file
download.file(url = "https://www.fueleconomy.gov/feg/epadata/vehicles.csv.zip",
destfile = temp,
mode="wb")
temp2 <- unzip(temp, "vehicles.csv") #unzip the file into a csv
raw_data <- read_csv(temp2) #read the csv into a data frame
unlink(temp) #delete the temp file
rm(temp, temp2) #remove the two temp objects from local environment
compare <- tibble(data_5 = attributes(data_5), raw = attributes(raw_data))
View(compare)
compare$data_5[1]
str(data_5)
class(data_5)
map(data_5, class())
map(data_5, class)
list1 <- map(data_5, class)
View(list1)
list2<- map(raw_data, class)
list3 <- c(list1$)
list2<- map_lgl(raw_data, class)
list2<- map_df(raw_data, class)
View(list2)
list2<- map_dfc(raw_data, class)
list2
View(list2)
list2<- map_dfr(raw_data, class)
list2
transpose(list2)
list3 <- transpose(list2)
View(list3)
list3[1]
unlist(list3)
View(list2)
list2a<- map_dfr(data_5, class)
list22 <- left_join(list2, list2a)
View(list22)
full_join(list2, list2a) -> list222
bind_rows(list2, list2a) -> test6
View(test6)
View(raw_data)
exam <- raw_data$barrels08 - data_5$barrels08
plot(exam)
View(compare)
rm(compare)
knitr::opts_chunk$set(fig.path = 'figures/',
warning = FALSE,
message = FALSE,
echo = FALSE,
cache = FALSE)
source("functions.R")
opc_inlet <- list.files("../data/test_20200805", "^2020.*inlet.*.xlsx$", full.names = TRUE)
cpc_inlet <- list.files("../data/test_20200805", "^2020.*cpc.*.csv$", full.names = TRUE)
bg <- list.files("../data/test_20200805", "^2020.*background.*.xlsx$", full.names = TRUE)
log <- list.files("../data/test_20200805", "^log.*.csv$", full.names = TRUE)
log <- read_csv(log[1], col_types = cols()) %>%
mutate(datetime_start = as.POSIXct(paste(date, time_start), format="%Y-%m-%d %H:%M:%S"),
datetime_end = as.POSIXct(paste(date, time_end), format="%Y-%m-%d %H:%M:%S")) %>%
select(participant, datetime_start, datetime_end, instrument, mask, maneuver) %>%
slice(2:n()) %>%
mutate(num = 1:n()) %>%
pivot_longer(c(datetime_start, datetime_end), names_to = "when", values_to = "datetime") %>%
pad("1 sec") %>%
tidyr::fill(names(.)) %>%
select(-when) %>%
distinct() %>%
filter(participant != "000")
counts <- read_opc_counts(opc_inlet[1]) %>%
filter(datetime > "2020-08-05 12:00:00") %>%
filter(datetime < "2020-08-05 15:30:00") %>%
arrange(datetime)
counts_total <- counts %>%
group_by(datetime) %>%
summarise(n = sum(counts))
counts_15s <- counts_total %>%
mutate(hour = as.numeric(hour(datetime)),
min = as.numeric(minute(datetime)),
sec = round(second(datetime) / 15, 0) * 15,
min = if_else(sec == 60, min + 1, min),
sec = if_else(sec == 60, 0, sec)) %>%
group_by(hour, min, sec) %>%
summarise(datetime = mean(datetime), conc = mean(n))
ggplot(counts_15s, aes(x = datetime, y = conc)) +
geom_point() +
geom_line() +
theme_bw() +
ylab("Particles / L") + xlab("") +
ggtitle("Total Counts > 0.3 microns") +
scale_y_log10()
counts_activity <- counts %>%
mutate(datetime = as.character(datetime)) %>%
left_join(log %>% mutate(datetime = as.character(datetime)), by = "datetime") %>%
mutate(datetime = as.POSIXct(datetime, tz = "US/Mountain")) %>%
na.omit() %>%
mutate(activity = paste(instrument, mask, maneuver, sep = "_"))
ggplot(counts_activity, aes(x = datetime, y = counts, color = activity)) +
geom_point() +
theme_bw() +
ylab("Particles / L") + xlab("") +
ggtitle("Concentration > 0.3 microns") +
theme(axis.text.x = element_text(angle = 55, hjust = 1))
bg <- counts_activity %>%
filter(activity == "none_yes_break")
ggplot(bg, aes(x = datetime, y = counts, color = activity)) +
geom_point() +
theme_bw() +
ylab("Particles / L") + xlab("") +
ggtitle("Concentration > 0.3 microns") +
theme(axis.text.x = element_text(angle = 55, hjust = 1))
counts_sum <- counts_activity %>%
group_by(datetime, activity) %>%
summarise(conc = sum(counts))
counts_act <- counts_sum %>% group_by(activity) %>%
summarise(conc = mean(conc))
ggplot(counts_act, aes(x = activity, y = conc)) +
geom_point() +
theme_bw() +
ylab("Particles / L") + xlab("") +
ggtitle("Concentration > 0.3 microns") +
theme(axis.text.x = element_text(angle = 55, hjust = 1))
p_data <- counts_activity %>%
group_by(activity, size) %>%
summarise(conc = mean(counts)) %>%
filter(activity != "none_no_free")
ggplot(p_data, aes(x = size, y = conc, color = activity)) +
geom_point(size = 2) +
theme_bw() +
facet_wrap(~activity) +
scale_y_log10() +
scale_x_log10()
bg <- p_data %>%
dplyr::filter(activity == "none_yes_break") %>%
mutate(ln_conc = log(conc), ln_size = log(size))
bg_model <- lm(bg$ln_conc ~ bg$ln_size)
bg <- p_data %>%
dplyr::filter(activity == "none_yes_break") %>%
mutate(ln_conc = log(conc), ln_size = log(size))
bg_model <- lm(bg$ln_conc ~ bg$ln_size)
bg <- p_data %>%
dplyr::filter(activity == "none_yes_break") %>%
mutate(ln_conc = log(conc), ln_size = log(size))
bg_model <- lm(bg$ln_conc ~ bg$ln_size)
ggplot(data = p_data, aes(x = size, y = conc, color = activity)) +
geom_point(size = 2) +
facet_wrap(facets = vars(activity)) +
stat_function(fun = pwr) +
theme_bw() +
scale_y_log10() +
scale_x_log10()
#create a temp file to hold the zipped data
temp <- tempfile()
#download the file into temp file
download.file(url = "https://www.fueleconomy.gov/feg/epadata/vehicles.csv.zip",
destfile = temp,
mode="wb")
temp2 <- unzip(temp, "vehicles.csv") #unzip the file into a csv
raw_data <- read_csv(temp2) #read the csv into a data frame
unlink(temp) #delete the temp file
rm(temp, temp2) #remove the two temp objects from local environment
