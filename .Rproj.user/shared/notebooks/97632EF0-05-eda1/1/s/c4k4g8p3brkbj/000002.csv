"0","# ""set seed"" to generate the same results each time"
"0","set.seed(2) "
"0","# create normal distribution"
"0","norm_dist <- rnorm(1000, mean = 50, sd = 15)"
"0","# split normal distribution into quantiles and output tabular result"
"0","quantile(norm_dist, probs = seq(0, 1, 0.1)) %>% round(0)"
"1","  0% "
"1"," 10% "
"1"," 20% "
"1"," 30% "
"1"," 40% "
"1"," 50% "
"1"," 60% "
"1"," 70% "
"1"," 80% "
"1"," 90% "
"1","100% "
"1","
"
"1","   9 "
"1","  32 "
"1","  38 "
"1","  43 "
"1","  46 "
"1","  51 "
"1","  54 "
"1","  59 "
"1","  64 "
"1","  71 "
"1","  95 "
"1","
"
"0","# manual method for calculating quantiles"
"0","norm_manual <- tibble::tibble("
"0","  # start with raw sample data generated from `rnorm()`"
"0","  sample_data = norm_dist, "
"0","  # sort the data"
"0","  sorted_data = sort(norm_dist),  "
"0","  # calculate cumulative fraction for each entry"
"0","  cum_frac = seq.int(from = 1 / length(norm_dist), "
"0","                     to = 1,"
"0","                     by = 1 / length(norm_dist)))"
"0","# create deciles sequence"
"0","deciles <- seq.int(from = 0, to = 1, by = 0.1)"
"0","# extract quantiles that match the decile values created above "
"0","normal_data_deciles <- norm_manual %>% "
"0","  dplyr::filter(cum_frac %in% deciles)"
