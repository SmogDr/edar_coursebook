---
title: "Markdowns"
author: "JV"
date: "7/23/2020"
output: 
  html_document:
    toc: TRUE
    toc_float: TRUE
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Markdowns

A ***markdown*** is a file format designed for the internet. Markdowns allow you to write plain text into a file, format that text, and embed code/images/data into the file  (everything you are reading in this coursebook was written and created with markdown files).  Markdown files are versatile because:  

  * Markdowns can be rendered into html, pdf, and doc files easily. Thus, markdown files can be turned into websites, email messages, reports, blogs, textbooks, and other forms of media without worry;
  * Markdowns are independent of the operating system (Mac, PC, Linux, Android, and iOS devices can read them);
  * Markdowns can be opened by almost any application (the file format is non-proprietary), so you don't need to worry about having special software to read them. 

## R Markdowns
The R Studio IDE uses ***"R Markdowns"*** (file extension .Rmd) to create markdown files specifically for the R programming environment.  To use the R markdown format, you need to install the `rmarkdown` package: `install.packages("rmarkdown")`. 

**Going forward, all of your homework and coding assignments will be created and submitted in the R Markdown format.**

Each R markdown file contains three main elements: header, text, and code chunks.  We will run through each of these facets below, but I recommend a visit to the [R Markdown tutorial section](https://rmarkdown.rstudio.com/lesson-1.html) on the RStudio website.

### YAML Header
The R Markdown "header" section is where you specify details about the file being created.  A markdown header known as a **YAML**, which stands for [*"YAML Ain't Markup Language"*](https://yaml.org/spec/1.2/spec.html#Introduction). A YAML (pronounced like â€œcamel") header is essentially a list of directives (referred to as "key:value" pairs) that help application software read and interpret the file. A YAML can act simultaneously as a "configuration file", a "log file", and "translator file" - allowing one software program to read the output of another program.  An example YAML is shown below.

```{r YAML-1, fig.align='center', fig.cap="Example of a YAML header for an R Markdown file"}
knitr::include_graphics("./images/YAML_1_anno.png")
```
In R markdown the YAML is delineated within a section that starts and ends with three dashes, "---", on separate lines.  Within a YAML you provide a list of key:value pairs that instructions on how the file should be read, interpreted, and output.  **What are "key:value" pairs?** The **"key:"** represents a category or directive that you want to specify and the **"value** represents the detail, information, level that you want to associate with that key.  

```{block, type="rmdnote}
The YAML header is optional in an R Markdown and directives will defer to default key:value pairs if none are supplied.  That said, I would encourage you to specify key directives like "author:", "date:" and "output:" in your YAML headers.
```

### Code Chunks


### Text

